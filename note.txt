// import { 
//   Connection, 
//   PublicKey, 
//   Transaction, 
//   Keypair, 
//   sendAndConfirmTransaction 
// } from "@solana/web3.js";
// import { 
//   createTransferInstruction, 
//   getAssociatedTokenAddress 
// } from "@solana/spl-token";

// //use the private key for testing purposes only 
// const privateKey = import.meta.env.VITE_PRIVATE_KEY;

// const SOLANA_RPC_URL = import.meta.env.VITE_RPC_URL;
// const connection = new Connection(SOLANA_RPC_URL, 'confirmed');

// export interface TransferTokenParams {
//   tokenMint: string;
//   destinationAddress: string;
//   amount: number;
//   decimals?: number;
// }

// export const transferToken = async ({ 
//   tokenMint, 
//   destinationAddress, 
//   amount, 
//   decimals = 9 
// }: TransferTokenParams) => {
//   try {
//     // Convert private key from hex string to Uint8Array
//     const privateKeyBytes = new Uint8Array(
//       privateKey.match(/.{1,2}/g)!.map((byte: string) => parseInt(byte, 16))
//     );
    
//     const keypair = Keypair.fromSecretKey(privateKeyBytes);
    
//     // Get source and destination token accounts
//     const sourceTokenAccount = await getAssociatedTokenAddress(
//       new PublicKey(tokenMint),
//       keypair.publicKey
//     );
    
//     const destinationTokenAccount = await getAssociatedTokenAddress(
//       new PublicKey(tokenMint),
//       new PublicKey(destinationAddress)
//     );

//     // Convert amount to proper token units (multiply by 10^decimals)
//     const tokenAmount = BigInt(amount * Math.pow(10, decimals));

//     // Create the transfer instruction
//     const transferInstruction = createTransferInstruction(
//       sourceTokenAccount,
//       destinationTokenAccount,
//       keypair.publicKey,
//       tokenAmount
//     );

//     // Create and send transaction
//     const transaction = new Transaction().add(transferInstruction);
    
//     const signature = await sendAndConfirmTransaction(
//       connection,
//       transaction,
//       [keypair],
//       {
//         commitment: 'confirmed',
//         skipPreflight: true
//       }
//     );
    
//     return {
//       success: true,
//       signature,
//       message: `Successfully transferred ${amount} tokens to ${destinationAddress}`
//     };
    
//   } catch (error) {
//     console.error('Transaction failed:', error);
//     return {
//       success: false,
//       error: error instanceof Error ? error.message : 'Unknown error occurred',
//       message: 'Token transfer failed'
//     };
//   }
// };